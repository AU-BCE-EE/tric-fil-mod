devtools::install_github("sashahafner/ALFAM2", ref = "Rcpp-dev", build_vignettes = TRUE)
vignette('ALFAM2-start')
library(ALFAM2)
sessionInfo()
dat1 <- data.frame(ctime = 72, TAN.app = 50, man.dm = 8,
air.temp = 20, wind.2m = 3,
app.mthd.bc = TRUE)
pred1 <- alfam2(dat1, app.name = ’TAN.app’, time.name = ’ctime’)
pred1 <- alfam2(dat1, app.name = 'TAN.app', time.name = 'ctime')
pred1
pred1 <- alfam2(dat1, app.name = 'TAN.app', time.name = 'ctime', flatout = TRUE)
pred1
dat1 <- data.frame(ctime = 0:10, TAN.app = 50, man.dm = 8,
air.temp = 20, wind.2m = 3,
app.mthd.bc = TRUE)
pred1 <- alfam2(dat1, app.name = 'TAN.app', time.name = 'ctime', flatout = TRUE)
alfam2(dat1, app.name = 'TAN.app', time.name = 'ctime', flatout = TRUE)
dat1 <- data.frame(ctime = -2:10, TAN.app = 50, man.dm = 8,
air.temp = 20, wind.2m = 3,
app.mthd.bc = TRUE)
alfam2(dat1, app.name = 'TAN.app', time.name = 'ctime', flatout = TRUE)
library(reticulate)
use_python('/usr/bin/python3')
use_python('C:\\Users\\sasha\\AppData\\Local\\Programs\\Python\\Python311')
reticulate::repl_python()
import shutil
import numpy as np
library(reticulate)
use_python('C:\\Users\\sasha\\AppData\\Local\\Programs\\Python\\Python311')
reticulate::repl_python()
import shutil
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
shutil.copy('../../mod_funcs.py', '.')
from mod_funcs import tfmod
shutil.copy('../../mod_funcs.py', '.')
from mod_funcs import tfmod
`
from mod_funcs import tfmod
??path
quit
if(.Platform$OS.type == "windows") {
use_python('C:\\Users\\sasha\\AppData\\Local\\Programs\\Python\\Python311')
} else {
use_python('/usr/bin/python3')
}
if(.Platform$OS.type == "windows") {
use_python('C:\\Users\\sasha\\AppData\\Local\\Programs\\Python\\Python311')
} else {
use_python('/usr/bin/python3')
}
setwd("C:/Users/sasha/Git-repos/tric-fil-mod/demos/09_time_variable_clin")
reticulate::repl_python()
shutil.copy('../../mod_funcs.py', '.')
from mod_funcs import tfmod
L = 2            # Filter length/depth (m)
por_g = 0.5      # (m3/m3)
por_l = 0.25     # (m3/m3)
v_g = 0.03
v_l = 2E-5
nc = 30          # Number of model cells (layers)
cg0 = 1          # (g/m3)
cl0 = 0          # (g/m3)
henry = (0.1, 2000.)
temp = 15.       # (degrees C)
dens_l = 1000    # Liquid density (kg/m3)
k = 500. / 3600  # Reaction rate (1/s)
pH = 7.
pKa = 7.
# Time-variable dirty air concentration coming in
#                 ~~~~~~~Time in seconds~~~~~~~~~~~~~~~    Concentration in g/m3
cgin = np.array([[0, 1000, 1100, 3600, 3700, 5000, 7200], [1, 3, 1, 1, 4, 2, 2]])
# Fixed for water
clin = 0.        # Fresh water concentration (g/m3)
# Times for model output, calculated from tt (total time) and nt (number of output times) here but could be set directly
# Total duration (hours)
tt = 2
# Number of time rows
nt = 500
times = np.linspace(0, tt, nt) * 3600
# Times for model output, calculated from tt (total time) and nt (number of output times) here but could be set directly
# Total duration (hours)
tt = 2
# Number of time rows
nt = 500
times = np.linspace(0, tt, nt) * 3600
`
times = np.linspace(0, tt, nt) * 3600
Kga = 0.06
pred1 = tfmod(L = L, por_g = por_g, por_l = por_l, v_g = v_g, v_l = v_l, nc = nc, cg0 = cg0,
cl0 = cl0, cgin = cgin, clin = clin, Kga = Kga, k = k, henry = henry, pKa = pKa,
pH = pH, temp = temp, dens_l = dens_l, times = times)
quit
system('where python')
# Find python executable
fp <- system('where python')[1]
fp
reticulate::repl_python()
pred2
pred2 = tfmod(L = L, por_g = por_g, por_l = por_l, v_g = v_g, v_l = v_l, nc = nc, cg0 = cg0,
cl0 = cl0, cgin = cgin, clin = clin, Kga = 'onda', k = k, henry = henry, pKa = pKa,
pH = pH, temp = temp, dens_l = dens_l, times = times)
pred2
pred2[4]
pred2[7]
pred2[8]
